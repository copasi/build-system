#!/usr/bin/env bash

. "$(dirname "$(readlink -f "$0")")"/functions
pushd "${BUILD_ROOT}"

rebuild=${clean:-false}

while [ _"$1" != _ ]; do
  case $1 in
  --rebuild)
    rebuild=true
    ;;

  *)
    ToBeBuild="${ToBeBuild} $1"
    ;;
  esac
 
  shift
done

function buildOne () {
  pushd ${BUILD_DIR}
  [ -e COPASI.${DIR_SUFFIX} ] || mkdir COPASI.${DIR_SUFFIX}
  cd COPASI.${DIR_SUFFIX}

  if [ ${rebuild} = true ] || [ ! -e "CMakeCache.txt" ]; then
    rm -rf * .cmake
    
    [ -z "${COMMON_CMAKE_OPTIONS}" ] || common_cmake_options="$(echo ${COMMON_CMAKE_OPTIONS} | sed -e 's/;/ /g')"
    [ -z "${COPASI_CMAKE_OPTIONS}" ] || copasi_cmake_options="$(echo ${COPASI_CMAKE_OPTIONS} | sed -e 's/;/ /g')"

    echo cmake ${common_cmake_options} ${copasi_cmake_options} "$(convertPath "${COPASI_SOURCES}")"
    cmake ${common_cmake_options} ${copasi_cmake_options} "$(convertPath "${COPASI_SOURCES}")"
  else
    touch "${COPASI_SOURCES}/CMakeLists.txt"
  fi
  
  ninja
  popd
}

for b in ${ToBeBuild:-${toBeBuild:-.}}; do
  if [ _$b != _. ]; then
    pushd $b
    . .variables
    LOG_SUFFIX=".$b"
  else
    . .variables
    LOG_SUFFIX=""
  fi

  echo buildOne $b
  buildOne $b 2>&1 | tee "${LOG_DIR}/COPASI${LOG_SUFFIX}.${DIR_SUFFIX}"

  [ _$b != _. ] && popd
done

popd
