#!/usr/bin/env bash

. "$(dirname "$(${COPASI_READLINK:-readlink} -f "$0")")"/functions
pushd "${BUILD_ROOT}"

rebuild=${clean:-false}

while [ _"$1" != _ ]; do
  case $1 in
  --rebuild)
    rebuild=true
    ;;

  *)
    ToBeBuild="${ToBeBuild} $1"
    ;;
  esac
 
  shift
done

function buildOne () {
  pushd ${BUILD_DIR}
  [ -e COPASI.${DIR_SUFFIX} ] || mkdir COPASI.${DIR_SUFFIX}
  cd COPASI.${DIR_SUFFIX}

  if [ ${rebuild} = true ] || [ ! -e "CMakeCache.txt" ]; then
    rm -rf * .cmake
      
    [ -z "${COMMON_CMAKE_OPTIONS}" ] || common_cmake_options="$(echo ${COMMON_CMAKE_OPTIONS} | sed -e 's/;/ /g')"
    [ -z "${COPASI_CMAKE_OPTIONS}" ] || copasi_cmake_options="$(echo ${COPASI_CMAKE_OPTIONS} | sed -e 's/;/ /g')"

    echo cmake ${common_cmake_options} ${copasi_cmake_options} "$(convertPath "${COPASI_SOURCES}")"
    cmake ${common_cmake_options} ${copasi_cmake_options} "$(convertPath "${COPASI_SOURCES}")"
    java_include="${JAVA_HOME}/include"
    java_lib="${JAVA_HOME}/libexec/openjdk.jdk/Contents/Home/lib/"
    JAVA_OPTS="-DJAVA_INCLUDE_PATH=${java_include} -DJAVA_INCLUDE_PATH2=${java_include} -DJAVA_AWT_INCLUDE_PATH=${java_include} -DJAVA_JVM_LIBRARY=${java_lib}/server/libjvm.dylib -DJAVA_AWT_LIBRARY=${java_lib}/libawt.dylib"
    options="-DSWIG_EXECUTABLE=${SWIG_EXECUTABLE} -DENABLE_JAVA=ON -DENABLE_CSHARP=ON -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DSELECT_QT=${SELECT_QT} ${JAVA_OPTS} -DF2C_INTEGER=int -DF2C_LOGICAL=int -DQt6Widgets_UIC_EXECUTABLE=${QTDIR}/share/qt/libexec/uic -DWITH_DATAVISUALIZATION_NAMESPACES=OFF -DJAVA_COMPATIBILITY=1.7 "
    
    [ -z "${COPASI_CMAKE_OPTIONS}" ] || COMMON_CMAKE_OPTIONS="$(echo ${COPASI_CMAKE_OPTIONS} | sed -e 's/;/ /g')"
    [ -e "${BUILD_DIR}" ] || mkdir -p "${BUILD_DIR}"
    
    pushd "${BUILD_DIR}"
    echo cmake -G Ninja ${COMMON_CMAKE_OPTIONS} ${options} "${COPASI_SOURCES}"
    cmake -G Ninja ${COMMON_CMAKE_OPTIONS} ${options} "${COPASI_SOURCES}"
    popd
  else
    touch "${COPASI_SOURCES}/CMakeLists.txt"
  fi

  echo ${BUILD_TOOL}
  ${BUILD_TOOL}

  popd
}

for b in ${ToBeBuild:-${toBeBuild:-.}}; do
  if [ _$b != _. ]; then
    pushd $b
    . "${VARIABLES}"
    LOG_SUFFIX=".$b"
  else
    . "${VARIABLES}"
    LOG_SUFFIX=""
  fi

  echo buildOne $b
  buildOne $b 2>&1 | tee "${LOG_DIR}/COPASI${LOG_SUFFIX}.${DIR_SUFFIX}"

  [ _$b != _. ] && popd
done

popd
