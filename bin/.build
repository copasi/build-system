#!/usr/bin/env bash

source "$(dirname "$(${COPASI_READLINK:-readlink} -f "$0")")"/functions
pushd "${BUILD_ROOT}"

PROGNAME="$(basename "$0")"
export DIR_SUFFIX="$(basename "$0")"

# Location of the COPASI sources
export COPASI_SOURCES="${COPASI_SOURCES:-${BUILD_ROOT}/git/COPASI.${DIR_SUFFIX}}"
export COPASI_SETUP_DIR="${COPASI_SETUP_DIR:-${BUILD_ROOT}/packages/setup.${DIR_SUFFIX}}"

# Upload information
export COPASI_SCP="${COPASI_SCP:-scp}"
export COPASI_UPLOAD="deploy:build-system/upload/stage"

# Defaults:
clean=false
local=false
comment=
branch=
tag=

[ -e .status.${PROGNAME} ] && . .status.${PROGNAME}

echo "All command line arguments given: $@"

while [ "_$1" != "_" ]; do
  case $1 in
  --clean)
    echo "Clean run requested"
    clean=true
    ;;

  --local)
    echo "Local run requested"
    local=true
    ;;

  --noscp)
    echo "No upload requested"
    export COPASI_SCP=""
    ;;

  --comment)
    echo "Comment: $2"
    comment="$2"
    shift
    ;;

  --branch)
    export branch="$2"
    echo "Branch: $branch"
    {
      (
        cd "${COPASI_SOURCES}"
        git fetch --all
        git checkout --force "${branch}"
      )
    } 2>&1 | tee ${BUILD_ROOT}/log/${PROGNAME}
    shift
    ;;

  --tag)
    echo "Tag: $2"
    export tag=$2
    shift
    ;;
  esac

  shift
done

{
echo comment=\"${comment}\" >.status.${PROGNAME}
echo branch=\"${branch}\" >>.status.${PROGNAME}

# We must be on a branch
if [ -z "${branch}" ]; then
  echo Error: Branch missing, use: --branch branch
  exit 1
fi

# Update the sources
pushd "${COPASI_SOURCES}"

git fetch --all

if [ "${local}" == false ]; then
  git reset --hard origin/"${branch}"
fi

if [ _"${tag}" != _"" ]; then
  git checkout tags/"${tag}"
fi

gitTools/initTools

# Determine the COPASI version
gitTools/UpdateCopasiVersion --force

# Set the version comment
sed -e 's/COPASI_VERSION_COMMENT.*/COPASI_VERSION_COMMENT "'${comment}'"/' \
  copasi/CopasiVersion.h >$$ && mv $$ copasi/CopasiVersion.h
popd

echo build ${toBeBuild:-.}
} 2>&1 | tee ${BUILD_ROOT}/log/${PROGNAME}

build ${toBeBuild:-.}

{
popd

packageCOPASI

# Upload the package if requested
if [ "_${COPASI_SCP}" != "_" ]; then
  version
  copyCOPASI
fi
} 2>&1 | tee -a ${BUILD_ROOT}/log/${PROGNAME}
