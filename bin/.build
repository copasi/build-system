#!/usr/bin/env bash

. "$(dirname "$(${COPASI_READLINK:-readlink} -f "$0")")"/functions
pushd "${BUILD_ROOT}"

PROGNAME="$(basename "$0")"
export DIR_SUFFIX="$(basename "$0")"

# Location of the COPASI sources
export COPASI_SOURCES="${BUILD_ROOT}/git/COPASI.${DIR_SUFFIX}"
export COPASI_SETUP_DIR="${BUILD_ROOT}/packages/setup.${DIR_SUFFIX}"

# Upload information
export COPASI_SCP="scp"
export COPASI_UPLOAD="deploy:environment/upload/stage"

# Defaults:
clean=false
local=false
comment=
branch=master
tag=

[ -e .status.${PROGNAME} ] && . .status.${PROGNAME}

while [ _"$1" != _ ]; do
  case $1 in
  --clean)
    export clean=true
    ;;

  --local)
    local=true
    ;;

  --noscp)
    export COPASI_SCP=""
    shift
    ;;

  --comment)
    comment="$2"
    shift
    ;;

  --branch)
    (cd "${COPASI_SOURCES}"; git fetch --all; git checkout --force "$2")
    branch="$2"
    shift
    ;;

  --tag)
    tag=$2
    shift
    ;;
  esac
 
  shift
done

echo comment=\"${comment}\" > .status.${PROGNAME}
echo branch=\"${branch}\" >> .status.${PROGNAME}

# Update the sources
pushd "${COPASI_SOURCES}"

git fetch --all

if [ "${local}" == false ]; then
  git reset --hard origin/"${branch}"
fi

if [ _"${tag}" != _"" ]; then
  git checkout tags/"${tag}"
fi

gitTools/initTools

# Determine the COPASI version
gitTools/UpdateCopasiVersion --force

# Set the version comment
sed -e 's/COPASI_VERSION_COMMENT.*/COPASI_VERSION_COMMENT "'${comment}'"/' \
  copasi/CopasiVersion.h > $$ && mv $$ copasi/CopasiVersion.h
popd

build ${toBeBuild:-.}

popd

packageCOPASI

# Upload the package if requested
if [ "_${COPASI_SCP}" != "_" ]; then
  version
  copyCOPASI
fi
