#!/usr/bin/env bash

. "$(dirname "$(readlink -f "$0")")"/functions
pushd "${BUILD_ROOT}"

clean=false
configure=false

while [ _"$1" != _ ]; do
  case $1 in
  --clean)
    clean=true
    ;;

  --configure)
    configure=true
    ;;
  esac

  shift
done

function buildOne() {
  . variables

  pushd ${BUILD_DIR}
  [ -e copasi-dependencies ] || mkdir copasi-dependencies
  cd copasi-dependencies

  if [ ${configure} = true -o ! -e CMakeCache.txt ]; then
    rm -rf * .cmake

    [ -z "${COMMON_CMAKE_OPTIONS}" ] || common_cmake_options="$(echo ${COMMON_CMAKE_OPTIONS} | sed -e 's/;/ /g')"
    [ -z "${DEPENDENCIES_CMAKE_OPTIONS}" ] || dependencies_cmake_options="$(echo ${DEPENDENCIES_CMAKE_OPTIONS} | sed -e 's/;/ /g')"

    echo cmake ${common_cmake_options} ${dependencies_cmake_options} "$(convertPath ${BUILD_ROOT}/git/copasi-dependencies)"
    cmake ${common_cmake_options} ${dependencies_cmake_options} "$(convertPath ${BUILD_ROOT}/git/copasi-dependencies)"
  else
    touch "${BUILD_ROOT}/git/copasi-dependencies/CMakeLists.txt"
  fi

  if [ ${clean} = true ]; then
    ninja clean
  fi

  ninja

  popd
}

for b in ${toBeBuild:-.}; do
  if [ _$1 != _. -a _$1 != _ ]; then
    pushd $1
    LOG_SUFFIX=".$1"
  else
    LOG_SUFFIX=""
  fi

  buildOne $b 2>&1 | tee "${LOG_DIR}/dependencies${LOG_SUFFIX}.${DIR_SUFFIX}"

  [ _$1 != _. -a _$1 != _ ] && popd $1
done
