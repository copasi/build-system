#!/usr/bin/env bash

. "$(dirname "$(${COPASI_READLINK:-readlink} -f "$0")")"/functions
pushd "${BUILD_ROOT}"

clean=false
configure=false
pull=false

while [ _"$1" != _ ]; do
  case $1 in
  --clean)
    clean=true
    ;;

  --configure)
    configure=true
    ;;

  --pull)
    pull=true
    ;;

  *)
    ToBeBuild="${ToBeBuild} $1"
    ;;
  esac

  shift
done

function buildOne() {
  pushd ${BUILD_DIR}
  [ -e copasi-dependencies ] || mkdir copasi-dependencies
  cd copasi-dependencies

  if [ ${configure} = true -o ! -e CMakeCache.txt ]; then
    rm -rf * .cmake

    [ -z "${COMMON_CMAKE_OPTIONS}" ] || common_cmake_options="$(echo ${COMMON_CMAKE_OPTIONS} | sed -e 's/;/ /g')"
    [ -z "${DEPENDENCIES_CMAKE_OPTIONS}" ] || dependencies_cmake_options="$(echo ${DEPENDENCIES_CMAKE_OPTIONS} | sed -e 's/;/ /g')"

    echo cmake ${common_cmake_options} \
         ${dependencies_cmake_options} \
         -DCOMMON_CMAKE_OPTIONS="${COMMON_CMAKE_OPTIONS}" \
         "$(convertPath ${BUILD_ROOT}/git/copasi-dependencies)"
    cmake ${common_cmake_options} \
         ${dependencies_cmake_options} \
         -DCOMMON_CMAKE_OPTIONS="${COMMON_CMAKE_OPTIONS}" \
         "$(convertPath ${BUILD_ROOT}/git/copasi-dependencies)"
  fi

  echo ${BUILD_TOOL}
  ${BUILD_TOOL}

  popd
}

if [ ${pull} = true ]; then
  (cd "${BUILD_ROOT}/git/copasi-dependencies" && git pull --rebase)
  configure=true
fi

for b in ${ToBeBuild:-${toBeBuild:-.}}; do
  if [ _$b != _. ]; then
    pushd $b
    echo source $(pwd)/"${VARIABLES}"
    . "${VARIABLES}"
    LOG_SUFFIX=".$b"
  else
    echo source "$(pwd)/${VARIABLES}"
    . "${VARIABLES}"
    LOG_SUFFIX=""
  fi

  echo buildOne $b
  buildOne $b 2>&1 | tee "${LOG_DIR}/dependencies${LOG_SUFFIX}"

  [ _$b != _. ] && popd
done
